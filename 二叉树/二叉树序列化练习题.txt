首先我们介绍二叉树先序序列化的方式，假设序列化的结果字符串为str，初始时str等于空字符串。先序遍历二叉树，如果遇到空节点，就在str的末尾加上“#!”，“#”表示这个节点为空，节点值不存在，当然你也可以用其他的特殊字符，“!”表示一个值的结束。如果遇到不为空的节点，假设节点值为3，就在str的末尾加上“3!”。现在请你实现树的先序序列化。

给定树的根结点root，请返回二叉树序列化后的字符串。 
string toString(TreeNode* root) {
        // write code here
        string res;
	if(root == NULL)
	{
		res += "#!";
		return res;
	}
	int val = root->val;
	string temp;
	stringstream s;
	s << val;	
	s >> temp;
       s.str("");
	res += temp;
	res += "!";
	res += toString(root->left);
	res += toString(root->right);
         return res;
    }

//to_string函数，将整数转换为字符串；

string to_String(int n)
{
	int m=n;
	int i=0,j=0;
	char s[max];
	char ss[max];
        if(m < 0)
	{
	   m  = -m;
	   ss[0] = '-';
	   j = 1;
	}
	while(m>0)
	{
		s[i++]= m%10 + '0';
		m/=10;
	}
	s[i]='\0';

	i=i-1;
	while(i>=0)
	{
		ss[j++]=s[i--];
	}
	ss[j]='\0';

	return ss;
}
