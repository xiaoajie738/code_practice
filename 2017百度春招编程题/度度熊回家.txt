#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

//一个数轴上共有N个点，第一个点的坐标是度度熊现在位置，第N-1个点是度度熊的家。现在他需要依次的从0号坐标走到N-1号坐标。
//	但是除了0号坐标和N-1号坐标，他可以在其余的N-2个坐标中选出一个点，并直接将这个点忽略掉，问度度熊回家至少走多少距离？ 
//输入描述:
//输入一个正整数N, N <= 50。
//接下来N个整数表示坐标，正数表示X轴的正方向，负数表示X轴的负方向。绝对值小于等于100
//输出描述:
//输出一个整数表示度度熊最少需要走的距离。
//输入例子:
//4
//1 4 -1 3
//输出例子:
//4
int main()
{
   int N;
   while(cin >> N)
   {
      vector<int> data(N);
	  for(int i = 0; i < N; ++i)
	  {
		  int num;
		  cin >> num;
		  data[i] = num;
	  }
	  int min_distance = -1;
	  int distance ;
	  for(int i = 1; i < N-1; ++i)
	  {
		  distance = 0;
		  int a = 0;
	     for(int j = 1; j < N; ++j)
		 {
			 if(j == i)
				 continue;
			 distance += abs(data[j] - data[a]);
			 a = j;
		 }
		 if(min_distance == -1)
			 min_distance = distance;
		 if(min_distance > distance)
			 min_distance = distance;
	  }
	 
	  cout << min_distance;
   }

}