#include<iostream>
#include<vector>
#include<string>
#include<algorithm>
using namespace std;

bool cmp(const pair<string,int> &s1, const pair<string,int> &s2)
{
    return s1.first < s2.first;
}

//翻转偶数
int main()
{
   int N = 0;
   while(cin >> N)
   {
	   vector<pair<string,int>> vec;
	   for(int i = 0; i < N; i++)
	   {
		    pair<string,int> s;
			cin >> s.first >> s.second;
			vec.push_back(s);
	   }
	   sort(vec.begin(),vec.end());
	   string l, m, s;
	   for(int i = 0; i < N; i++)
	   {
		   if(vec[i].second > 1)
		   {
			   l = l + vec[i].first + " ";
			   s =  s + vec[i].first + " ";
			   vec[i].second -= 2;
		   }
	   }
	   for(int i = 0; i < N; i++)
	   {
		   if(vec[i].second >= 1)
		   {
			   while(vec[i].second--)
			   {
				   m = m + vec[i].first + " "; 
			   }
		   }
	   }
	   l = l + m + s;
	   if(l.size() != 0)// 需考虑测试为空，否则程序通不过
	       l.pop_back();
	   cout << l << endl;
   }
   return 0;
}
