//冒泡排序方法的实现1
void bubbleSort1(vector<int> &A, int n) 
{
	// write code here
	if(A.size() == 0 || A.size() != n)
		return ;
	for(int i = 0; i < n; i++)
	{
	   for(int j = 0; j < n - i -1; j++)
	   {
	      if(A[j] > A[j + 1])
			  swap(A[j],A[j+1]);
	   }
	}
}
//冒泡排序方法的实现2
void bubbleSort2(vector<int> &A, int n) 
{
	// write code here
	if(A.size() == 0 || A.size() != n)
		return ;
	for(int i = 0; i < n; i++)
	{
		for(int j = n-1; j > i; j--)
		{
			if(A[j-1] > A[j])
				swap(A[j-1],A[j]);
		}
	}
}
//选择排序算法
void selectionSort(vector<int> &A, int n) 
{
	// write code here
	if(A.size() == 0 || A.size() != n)
		return ;
	for(int i = 0; i < n; i++)
	{   
		int min = i; 
		for(int j = i + 1; j < n; j++)
		{   
		    if(A[min] > A[j])
				min = j;
		}
		if(i != min)
		  swap(A[i],A[min]);
	}
}
//插入排序算法
void insertionSort(vector<int> &A, int n) 
{
	// write code here
	if(A.size() == 0 || A.size() != n)
		return ;
	for(int i = 1; i < n; i++)
	{
		for(int j = i; j > 0; j--)
		{
			if(A[j] < A[j-1])
			{
				swap(A[j],A[j-1]);
			}
			else
			   break;
		} 
	}
}