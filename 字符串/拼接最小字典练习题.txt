对于一个给定的字符串数组，请找到一种拼接顺序，使所有小字符串拼接成的大字符串是所有可能的拼接中字典序最小的。
给定一个字符串数组strs，同时给定它的大小，请返回拼接成的串。
//自己写的快速排序函数
int Partion(vector<string> &strs, int begin, int end)
{
    string keyNum = strs[begin];
	int low = begin, high = end;
	while(low < high)
	{
	   while(low < high)
	   {
	      if(keyNum + strs[high] <=  strs[high] + keyNum)
			   high--;
		  else
		  {
			  swap(strs[low],strs[high]);
			  break;
		  }  
	   }
	   while(low < high)
	   {
	      if(strs[low] + keyNum <= keyNum + strs[low])
			  low++;
		  else
		  {
			  swap(strs[low],strs[high]);
			  break;
		  }
	   }
	}
	return low;
}

void Qsort(vector<string> &strs, int begin, int end)
{
	if(begin >= end)
		return;
     int mid = 0;
	 mid = Partion(strs,begin,end);
	 Qsort(strs,begin,mid-1);
	 Qsort(strs,mid+1,end); 
}

string findSmallest(vector<string> strs, int n) 
{
	string result;
	Qsort(strs,0,n-1);
	for(int i = 0; i < n; i++)
	{
		result += strs[i];
	}
	return result;
}

//调用sort函数
bool cmp(string a, string b)
{
   return a+b <= b+a;
}

string findSmallest(vector<string> strs, int n) 
{
	string result;
	sort(strs.begin(),strs.end(),cmp);
	for(int i = 0; i < n; i++)
	{
		result += strs[i];
	}
	return result;
}



